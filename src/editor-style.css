/*!
Editor stylesheet
*/

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */

/**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Prevent adjustments of font size after orientation changes in IE and iOS.
 */

html {
  font-family: sans-serif; /* 1 */
  -ms-text-size-adjust: 100%; /* 2 */
  -webkit-text-size-adjust: 100%; /* 2 */
}

/**
 * Remove the margin in all browsers (opinionated).
 */

body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */

/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 * 2. Add the correct display in IE.
 */

article,
aside,
details, /* 1 */
figcaption,
figure,
footer,
header,
main, /* 2 */
menu,
nav,
section,
summary { /* 1 */
  display: block;
}

/**
 * Add the correct display in IE 9-.
 */

audio,
canvas,
progress,
video {
  display: inline-block;
}

/**
 * Add the correct display in iOS 4-7.
 */

audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */

progress {
  vertical-align: baseline;
}

/**
 * Add the correct display in IE 10-.
 * 1. Add the correct display in IE.
 */

template, /* 1 */
[hidden] {
  display: none;
}

/* Links
   ========================================================================== */

/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */

a {
  background-color: transparent; /* 1 */
  -webkit-text-decoration-skip: objects; /* 2 */
}

/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */

a:active,
a:hover {
  outline-width: 0;
}

/* Text-level semantics
   ========================================================================== */

/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */

abbr[title] {
  border-bottom: none; /* 1 */
  text-decoration: underline; /* 2 */
  text-decoration: underline dotted; /* 2 */
}

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */

b,
strong {
  font-weight: inherit;
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */

b,
strong {
  font-weight: bolder;
}

/**
 * Add the correct font style in Android 4.3-.
 */

dfn {
  font-style: italic;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Add the correct background and color in IE 9-.
 */

mark {
  background-color: #ff0;
  color: #000;
}

/**
 * Add the correct font size in all browsers.
 */

small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */

/**
 * Remove the border on images inside links in IE 10-.
 */

img {
  border-style: none;
}

/**
 * Hide the overflow in IE.
 */

svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */

code,
kbd,
pre,
samp {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/**
 * Add the correct margin in IE 8.
 */

figure {
  margin: 1em 40px;
}

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */

hr {
  box-sizing: content-box; /* 1 */
  height: 0; /* 1 */
  overflow: visible; /* 2 */
}

/* Forms
   ========================================================================== */

/**
 * 1. Change font properties to `inherit` in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */

button,
input,
select,
textarea {
  font: inherit; /* 1 */
  margin: 0; /* 2 */
}

/**
 * Restore the font weight unset by the previous rule.
 */

optgroup {
  font-weight: bold;
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */

button,
input { /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */

button,
select { /* 1 */
  text-transform: none;
}

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */

button,
html [type="button"], /* 1 */
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; /* 2 */
}

/**
 * Remove the inner border and padding in Firefox.
 */

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */

button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */

legend {
  box-sizing: border-box; /* 1 */
  color: inherit; /* 2 */
  display: table; /* 1 */
  max-width: 100%; /* 1 */
  padding: 0; /* 3 */
  white-space: normal; /* 1 */
}

/**
 * Remove the default vertical scrollbar in IE.
 */

textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */

[type="checkbox"],
[type="radio"] {
  box-sizing: border-box; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */

[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */

[type="search"] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on OS X.
 */

[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Correct the text style of placeholders in Chrome, Edge, and Safari.
 */

::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */

::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/**
 * A thin layer on top of normalize.css that provides a starting point more
 * suitable for web applications.
 */

/**
 * Prevent margin and border from affecting element width.
 * https://goo.gl/pYtbK7
 *
 */

html {
  box-sizing: border-box;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

/**
 * Removes the default spacing and border for appropriate elements.
 */

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
figure,
p,
pre {
  margin: 0;
}

button {
  background: transparent;
  border: 0;
  padding: 0;
}

/**
 * Work around a Firefox/IE bug where the transparent `button` background
 * results in a loss of the default `button` focus styles.
 */

button:focus {
  outline: 1px dotted;
  outline: 5px auto -webkit-focus-ring-color;
}

fieldset {
  border: 0;
  margin: 0;
  padding: 0;
}

iframe {
  border: 0;
}

ol,
ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

/**
 * Suppress the focus outline on elements that cannot be accessed via keyboard.
 * This prevents an unwanted focus outline from appearing around elements that
 * might still respond to pointer events.
 */

[tabindex="-1"]:focus {
  outline: none !important;
}

/**
 * @define utilities
 * Vertical alignment utilities
 * Depends on an appropriate `display` value.
 */

.u-alignBaseline {
  vertical-align: baseline !important;
}

.u-alignBottom {
  vertical-align: bottom !important;
}

.u-alignMiddle {
  vertical-align: middle !important;
}

.u-alignTop {
  vertical-align: top !important;
}

/**
 * @define utilities
 * Display-type utilities
 */

.u-block {
  display: block !important;
}

.u-hidden {
  display: none !important;
}

/**
 * Completely remove from the flow but leave available to screen readers.
 */

.u-hiddenVisually {
  border: 0 !important;
  clip: rect(1px, 1px, 1px, 1px) !important;
  height: 1px !important;
  overflow: hidden !important;
  padding: 0 !important;
  position: absolute !important;
  width: 1px !important;
}

.u-inline {
  display: inline !important;
}

/**
 * 1. Fix for Firefox bug: an image styled `max-width:100%` within an
 * inline-block will display at its default size, and not limit its width to
 * 100% of an ancestral container.
 */

.u-inlineBlock {
  display: inline-block !important;
  max-width: 100%; /* 1 */
}

.u-table {
  display: table !important;
}

.u-tableCell {
  display: table-cell !important;
}

.u-tableRow {
  display: table-row !important;
}

/**
 * @define utilities
 * Contain floats
 *
 * Make an element expand to contain floated children.
 * Uses pseudo-elements (micro clearfix).
 *
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of the
 *    element.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */

.u-cf::before,
.u-cf::after {
  content: " "; /* 1 */
  display: table; /* 2 */
}

.u-cf::after {
  clear: both;
}

/**
 * New block formatting context
 *
 * This affords some useful properties to the element. It won't wrap under
 * floats. Will also contain any floated children.

 * N.B. This will clip overflow. Use the alternative method below if this is
 * problematic.
 */

.u-nbfc {
  overflow: hidden !important;
}

/**
 * New block formatting context (alternative)
 *
 * Alternative method when overflow must not be clipped.
 *
 * 1. Create a new block formatting context (NBFC).
 * 2. Avoid shrink-wrap behaviour of table-cell.
 *
 * N.B. This breaks down in some browsers when elements within this element
 * exceed its width.
 */

.u-nbfcAlt {
  display: table-cell !important; /* 1 */
  width: 10000px !important; /* 2 */
}

/**
 * Floats
 */

.u-floatLeft {
  float: left !important;
}

.u-floatRight {
  float: right !important;
}

/**
 * @define utilities
 * Clean link
 *
 * A link without any text-decoration at all.
 */

.u-linkClean,
.u-linkClean:hover,
.u-linkClean:focus,
.u-linkClean:active {
  text-decoration: none !important;
}

/**
 * Link complex
 *
 * A common pattern is to have a link with several pieces of text and/or an
 * icon, where only one piece of text should display the underline when the
 * link is the subject of user interaction.
 *
 * Example HTML:
 *
 * <a class="u-linkComplex" href="#">
 *   Link complex
 *   <span class="u-linkComplexTarget">target</span>
 * </a>
 */

.u-linkComplex,
.u-linkComplex:hover,
.u-linkComplex:focus,
.u-linkComplex:active {
  text-decoration: none !important;
}

.u-linkComplex:hover .u-linkComplexTarget,
.u-linkComplex:focus .u-linkComplexTarget,
.u-linkComplex:active .u-linkComplexTarget {
  text-decoration: underline !important;
}

/**
 * Block-level link
 *
 * Combination of traits commonly used in vertical navigation lists.
 */

.u-linkBlock,
.u-linkBlock:hover,
.u-linkBlock:focus,
.u-linkBlock:active {
  display: block !important;
  text-decoration: none !important;
}

/**
 * @define utilities
 * Specify the proportional offset after an element.
 * Intentional redundancy build into each set of unit classes.
 * Supports: 2, 4, 5, 6, 8, 10, 12 section
 */

.u-after1of12 {
  margin-right: 8.33333% !important;
}

.u-after1of10 {
  margin-right: 10% !important;
}

.u-after1of8 {
  margin-right: 12.5% !important;
}

.u-after1of6,
.u-after2of12 {
  margin-right: 16.66667% !important;
}

.u-after1of5,
.u-after2of10 {
  margin-right: 20% !important;
}

.u-after1of4,
.u-after2of8,
.u-after3of12 {
  margin-right: 25% !important;
}

.u-after3of10 {
  margin-right: 30% !important;
}

.u-after1of3,
.u-after2of6,
.u-after4of12 {
  margin-right: 33.33333% !important;
}

.u-after3of8 {
  margin-right: 37.5% !important;
}

.u-after2of5,
.u-after4of10 {
  margin-right: 40% !important;
}

.u-after5of12 {
  margin-right: 41.66667% !important;
}

.u-after1of2,
.u-after2of4,
.u-after3of6,
.u-after4of8,
.u-after5of10,
.u-after6of12 {
  margin-right: 50% !important;
}

.u-after7of12 {
  margin-right: 58.33333% !important;
}

.u-after3of5,
.u-after6of10 {
  margin-right: 60% !important;
}

.u-after5of8 {
  margin-right: 62.5% !important;
}

.u-after2of3,
.u-after4of6,
.u-after8of12 {
  margin-right: 66.66667% !important;
}

.u-after7of10 {
  margin-right: 70% !important;
}

.u-after3of4,
.u-after6of8,
.u-after9of12 {
  margin-right: 75% !important;
}

.u-after4of5,
.u-after8of10 {
  margin-right: 80% !important;
}

.u-after5of6,
.u-after10of12 {
  margin-right: 83.33333% !important;
}

.u-after7of8 {
  margin-right: 87.5% !important;
}

.u-after9of10 {
  margin-right: 90% !important;
}

.u-after11of12 {
  margin-right: 91.66667% !important;
}

/**
 * @define utilities
 * Offset: breakpoint 1 (small)
 *
 * Specify the proportional offset after an element.
 * Intentional redundancy build into each set of unit classes.
 * Supports: 2, 4, 5, 6, 8, 10, 12 section
 */

@media (min-width: 48em) {

  .u-sm-afterNone {
    margin-right: 0 !important;
  }

  .u-sm-after1of12 {
    margin-right: 8.33333% !important;
  }

  .u-sm-after1of10 {
    margin-right: 10% !important;
  }

  .u-sm-after1of8 {
    margin-right: 12.5% !important;
  }

  .u-sm-after1of6,
  .u-sm-after2of12 {
    margin-right: 16.66667% !important;
  }

  .u-sm-after1of5,
  .u-sm-after2of10 {
    margin-right: 20% !important;
  }

  .u-sm-after1of4,
  .u-sm-after2of8,
  .u-sm-after3of12 {
    margin-right: 25% !important;
  }

  .u-sm-after3of10 {
    margin-right: 30% !important;
  }

  .u-sm-after1of3,
  .u-sm-after2of6,
  .u-sm-after4of12 {
    margin-right: 33.33333% !important;
  }

  .u-sm-after3of8 {
    margin-right: 37.5% !important;
  }

  .u-sm-after2of5,
  .u-sm-after4of10 {
    margin-right: 40% !important;
  }

  .u-sm-after5of12 {
    margin-right: 41.66667% !important;
  }

  .u-sm-after1of2,
  .u-sm-after2of4,
  .u-sm-after3of6,
  .u-sm-after4of8,
  .u-sm-after5of10,
  .u-sm-after6of12 {
    margin-right: 50% !important;
  }

  .u-sm-after7of12 {
    margin-right: 58.33333% !important;
  }

  .u-sm-after3of5,
  .u-sm-after6of10 {
    margin-right: 60% !important;
  }

  .u-sm-after5of8 {
    margin-right: 62.5% !important;
  }

  .u-sm-after2of3,
  .u-sm-after4of6,
  .u-sm-after8of12 {
    margin-right: 66.66667% !important;
  }

  .u-sm-after7of10 {
    margin-right: 70% !important;
  }

  .u-sm-after3of4,
  .u-sm-after6of8,
  .u-sm-after9of12 {
    margin-right: 75% !important;
  }

  .u-sm-after4of5,
  .u-sm-after8of10 {
    margin-right: 80% !important;
  }

  .u-sm-after5of6,
  .u-sm-after10of12 {
    margin-right: 83.33333% !important;
  }

  .u-sm-after7of8 {
    margin-right: 87.5% !important;
  }

  .u-sm-after9of10 {
    margin-right: 90% !important;
  }

  .u-sm-after11of12 {
    margin-right: 91.66667% !important;
  }

}

/**
 * @define utilities
 * Offset: breakpoint 2 (medium)
 *
 * Specify the proportional offset after an element.
 * Intentional redundancy build into each set of unit classes.
 * Supports: 2, 4, 5, 6, 8, 10, 12 section
 */

@media (min-width: 62em) {

  .u-md-afterNone {
    margin-right: 0 !important;
  }

  .u-md-after1of12 {
    margin-right: 8.33333% !important;
  }

  .u-md-after1of10 {
    margin-right: 10% !important;
  }

  .u-md-after1of8 {
    margin-right: 12.5% !important;
  }

  .u-md-after1of6,
  .u-md-after2of12 {
    margin-right: 16.66667% !important;
  }

  .u-md-after1of5,
  .u-md-after2of10 {
    margin-right: 20% !important;
  }

  .u-md-after1of4,
  .u-md-after2of8,
  .u-md-after3of12 {
    margin-right: 25% !important;
  }

  .u-md-after3of10 {
    margin-right: 30% !important;
  }

  .u-md-after1of3,
  .u-md-after2of6,
  .u-md-after4of12 {
    margin-right: 33.33333% !important;
  }

  .u-md-after3of8 {
    margin-right: 37.5% !important;
  }

  .u-md-after2of5,
  .u-md-after4of10 {
    margin-right: 40% !important;
  }

  .u-md-after5of12 {
    margin-right: 41.66667% !important;
  }

  .u-md-after1of2,
  .u-md-after2of4,
  .u-md-after3of6,
  .u-md-after4of8,
  .u-md-after5of10,
  .u-md-after6of12 {
    margin-right: 50% !important;
  }

  .u-md-after7of12 {
    margin-right: 58.33333% !important;
  }

  .u-md-after3of5,
  .u-md-after6of10 {
    margin-right: 60% !important;
  }

  .u-md-after5of8 {
    margin-right: 62.5% !important;
  }

  .u-md-after2of3,
  .u-md-after4of6,
  .u-md-after8of12 {
    margin-right: 66.66667% !important;
  }

  .u-md-after7of10 {
    margin-right: 70% !important;
  }

  .u-md-after3of4,
  .u-md-after6of8,
  .u-md-after9of12 {
    margin-right: 75% !important;
  }

  .u-md-after4of5,
  .u-md-after8of10 {
    margin-right: 80% !important;
  }

  .u-md-after5of6,
  .u-md-after10of12 {
    margin-right: 83.33333% !important;
  }

  .u-md-after7of8 {
    margin-right: 87.5% !important;
  }

  .u-md-after9of10 {
    margin-right: 90% !important;
  }

  .u-md-after11of12 {
    margin-right: 91.66667% !important;
  }

}

/**
 * @define utilities
 * Offset: breakpoint 3 (large)
 *
 * Specify the proportional offset after an element.
 * Intentional redundancy build into each set of unit classes.
 * Supports: 2, 4, 5, 6, 8, 10, 12 section
 */

@media (min-width: 75em) {

  .u-lg-afterNone {
    margin-right: 0 !important;
  }

  .u-lg-after1of12 {
    margin-right: 8.33333% !important;
  }

  .u-lg-after1of10 {
    margin-right: 10% !important;
  }

  .u-lg-after1of8 {
    margin-right: 12.5% !important;
  }

  .u-lg-after1of6,
  .u-lg-after2of12 {
    margin-right: 16.66667% !important;
  }

  .u-lg-after1of5,
  .u-lg-after2of10 {
    margin-right: 20% !important;
  }

  .u-lg-after1of4,
  .u-lg-after2of8,
  .u-lg-after3of12 {
    margin-right: 25% !important;
  }

  .u-lg-after3of10 {
    margin-right: 30% !important;
  }

  .u-lg-after1of3,
  .u-lg-after2of6,
  .u-lg-after4of12 {
    margin-right: 33.33333% !important;
  }

  .u-lg-after3of8 {
    margin-right: 37.5% !important;
  }

  .u-lg-after2of5,
  .u-lg-after4of10 {
    margin-right: 40% !important;
  }

  .u-lg-after5of12 {
    margin-right: 41.66667% !important;
  }

  .u-lg-after1of2,
  .u-lg-after2of4,
  .u-lg-after3of6,
  .u-lg-after4of8,
  .u-lg-after5of10,
  .u-lg-after6of12 {
    margin-right: 50% !important;
  }

  .u-lg-after7of12 {
    margin-right: 58.33333% !important;
  }

  .u-lg-after3of5,
  .u-lg-after6of10 {
    margin-right: 60% !important;
  }

  .u-lg-after5of8 {
    margin-right: 62.5% !important;
  }

  .u-lg-after2of3,
  .u-lg-after4of6,
  .u-lg-after8of12 {
    margin-right: 66.66667% !important;
  }

  .u-lg-after7of10 {
    margin-right: 70% !important;
  }

  .u-lg-after3of4,
  .u-lg-after6of8,
  .u-lg-after9of12 {
    margin-right: 75% !important;
  }

  .u-lg-after4of5,
  .u-lg-after8of10 {
    margin-right: 80% !important;
  }

  .u-lg-after5of6,
  .u-lg-after10of12 {
    margin-right: 83.33333% !important;
  }

  .u-lg-after7of8 {
    margin-right: 87.5% !important;
  }

  .u-lg-after9of10 {
    margin-right: 90% !important;
  }

  .u-lg-after11of12 {
    margin-right: 91.66667% !important;
  }

}

/**
 * @define utilities
 * Specify the proportional offset before an object.
 * Intentional redundancy build into each set of unit classes.
 * Supports: 2, 3, 4, 5, 6, 8, 10, 12 section
 */

.u-before1of12 {
  margin-left: 8.33333% !important;
}

.u-before1of10 {
  margin-left: 10% !important;
}

.u-before1of8 {
  margin-left: 12.5% !important;
}

.u-before1of6,
.u-before2of12 {
  margin-left: 16.66667% !important;
}

.u-before1of5,
.u-before2of10 {
  margin-left: 20% !important;
}

.u-before1of4,
.u-before2of8,
.u-before3of12 {
  margin-left: 25% !important;
}

.u-before3of10 {
  margin-left: 30% !important;
}

.u-before1of3,
.u-before2of6,
.u-before4of12 {
  margin-left: 33.33333% !important;
}

.u-before3of8 {
  margin-left: 37.5% !important;
}

.u-before2of5,
.u-before4of10 {
  margin-left: 40% !important;
}

.u-before5of12 {
  margin-left: 41.66667% !important;
}

.u-before1of2,
.u-before2of4,
.u-before3of6,
.u-before4of8,
.u-before5of10,
.u-before6of12 {
  margin-left: 50% !important;
}

.u-before7of12 {
  margin-left: 58.33333% !important;
}

.u-before3of5,
.u-before6of10 {
  margin-left: 60% !important;
}

.u-before5of8 {
  margin-left: 62.5% !important;
}

.u-before2of3,
.u-before4of6,
.u-before8of12 {
  margin-left: 66.66667% !important;
}

.u-before7of10 {
  margin-left: 70% !important;
}

.u-before3of4,
.u-before6of8,
.u-before9of12 {
  margin-left: 75% !important;
}

.u-before4of5,
.u-before8of10 {
  margin-left: 80% !important;
}

.u-before5of6,
.u-before10of12 {
  margin-left: 83.33333% !important;
}

.u-before7of8 {
  margin-left: 87.5% !important;
}

.u-before9of10 {
  margin-left: 90% !important;
}

.u-before11of12 {
  margin-left: 91.66667% !important;
}

/**
 * @define utilities
 * Offset: breakpoint 1 (small)
 *
 * Specify the proportional offset before an element.
 * Intentional redundancy build into each set of unit classes.
 * Supports: 2, 3, 4, 5, 6, 8, 10, 12 section
 */

@media (min-width: 48em) {

  .u-sm-beforeNone {
    margin-left: 0 !important;
  }

  .u-sm-before1of12 {
    margin-left: 8.33333% !important;
  }

  .u-sm-before1of10 {
    margin-left: 10% !important;
  }

  .u-sm-before1of8 {
    margin-left: 12.5% !important;
  }

  .u-sm-before1of6,
  .u-sm-before2of12 {
    margin-left: 16.66667% !important;
  }

  .u-sm-before1of5,
  .u-sm-before2of10 {
    margin-left: 20% !important;
  }

  .u-sm-before1of4,
  .u-sm-before2of8,
  .u-sm-before3of12 {
    margin-left: 25% !important;
  }

  .u-sm-before3of10 {
    margin-left: 30% !important;
  }

  .u-sm-before1of3,
  .u-sm-before2of6,
  .u-sm-before4of12 {
    margin-left: 33.33333% !important;
  }

  .u-sm-before3of8 {
    margin-left: 37.5% !important;
  }

  .u-sm-before2of5,
  .u-sm-before4of10 {
    margin-left: 40% !important;
  }

  .u-sm-before5of12 {
    margin-left: 41.66667% !important;
  }

  .u-sm-before1of2,
  .u-sm-before2of4,
  .u-sm-before3of6,
  .u-sm-before4of8,
  .u-sm-before5of10,
  .u-sm-before6of12 {
    margin-left: 50% !important;
  }

  .u-sm-before7of12 {
    margin-left: 58.33333% !important;
  }

  .u-sm-before3of5,
  .u-sm-before6of10 {
    margin-left: 60% !important;
  }

  .u-sm-before5of8 {
    margin-left: 62.5% !important;
  }

  .u-sm-before2of3,
  .u-sm-before4of6,
  .u-sm-before8of12 {
    margin-left: 66.66667% !important;
  }

  .u-sm-before7of10 {
    margin-left: 70% !important;
  }

  .u-sm-before3of4,
  .u-sm-before6of8,
  .u-sm-before9of12 {
    margin-left: 75% !important;
  }

  .u-sm-before4of5,
  .u-sm-before8of10 {
    margin-left: 80% !important;
  }

  .u-sm-before5of6,
  .u-sm-before10of12 {
    margin-left: 83.33333% !important;
  }

  .u-sm-before7of8 {
    margin-left: 87.5% !important;
  }

  .u-sm-before9of10 {
    margin-left: 90% !important;
  }

  .u-sm-before11of12 {
    margin-left: 91.66667% !important;
  }

}

/**
 * @define utilities
 * Offset: breakpoint 2 (medium)
 *
 * Specify the proportional offset before an element.
 * Intentional redundancy build into each set of unit classes.
 * Supports: 2, 3, 4, 5, 6, 8, 10, 12 section
 */

@media (min-width: 62em) {

  .u-md-beforeNone {
    margin-left: 0 !important;
  }

  .u-md-before1of12 {
    margin-left: 8.33333% !important;
  }

  .u-md-before1of10 {
    margin-left: 10% !important;
  }

  .u-md-before1of8 {
    margin-left: 12.5% !important;
  }

  .u-md-before1of6,
  .u-md-before2of12 {
    margin-left: 16.66667% !important;
  }

  .u-md-before1of5,
  .u-md-before2of10 {
    margin-left: 20% !important;
  }

  .u-md-before1of4,
  .u-md-before2of8,
  .u-md-before3of12 {
    margin-left: 25% !important;
  }

  .u-md-before3of10 {
    margin-left: 30% !important;
  }

  .u-md-before1of3,
  .u-md-before2of6,
  .u-md-before4of12 {
    margin-left: 33.33333% !important;
  }

  .u-md-before3of8 {
    margin-left: 37.5% !important;
  }

  .u-md-before2of5,
  .u-md-before4of10 {
    margin-left: 40% !important;
  }

  .u-md-before5of12 {
    margin-left: 41.66667% !important;
  }

  .u-md-before1of2,
  .u-md-before2of4,
  .u-md-before3of6,
  .u-md-before4of8,
  .u-md-before5of10,
  .u-md-before6of12 {
    margin-left: 50% !important;
  }

  .u-md-before7of12 {
    margin-left: 58.33333% !important;
  }

  .u-md-before3of5,
  .u-md-before6of10 {
    margin-left: 60% !important;
  }

  .u-md-before5of8 {
    margin-left: 62.5% !important;
  }

  .u-md-before2of3,
  .u-md-before4of6,
  .u-md-before8of12 {
    margin-left: 66.66667% !important;
  }

  .u-md-before7of10 {
    margin-left: 70% !important;
  }

  .u-md-before3of4,
  .u-md-before6of8,
  .u-md-before9of12 {
    margin-left: 75% !important;
  }

  .u-md-before4of5,
  .u-md-before8of10 {
    margin-left: 80% !important;
  }

  .u-md-before5of6,
  .u-md-before10of12 {
    margin-left: 83.33333% !important;
  }

  .u-md-before7of8 {
    margin-left: 87.5% !important;
  }

  .u-md-before9of10 {
    margin-left: 90% !important;
  }

  .u-md-before11of12 {
    margin-left: 91.66667% !important;
  }

}

/**
 * @define utilities
 * Offset: breakpoint 3 (large)
 *
 * Specify the proportional offset before an element.
 * Intentional redundancy build into each set of unit classes.
 * Supports: 2, 3, 4, 5, 6, 8, 10, 12 section
 */

@media (min-width: 75em) {

  .u-lg-beforeNone {
    margin-left: 0 !important;
  }

  .u-lg-before1of12 {
    margin-left: 8.33333% !important;
  }

  .u-lg-before1of10 {
    margin-left: 10% !important;
  }

  .u-lg-before1of8 {
    margin-left: 12.5% !important;
  }

  .u-lg-before1of6,
  .u-lg-before2of12 {
    margin-left: 16.66667% !important;
  }

  .u-lg-before1of5,
  .u-lg-before2of10 {
    margin-left: 20% !important;
  }

  .u-lg-before1of4,
  .u-lg-before2of8,
  .u-lg-before3of12 {
    margin-left: 25% !important;
  }

  .u-lg-before3of10 {
    margin-left: 30% !important;
  }

  .u-lg-before1of3,
  .u-lg-before2of6,
  .u-lg-before4of12 {
    margin-left: 33.33333% !important;
  }

  .u-lg-before3of8 {
    margin-left: 37.5% !important;
  }

  .u-lg-before2of5,
  .u-lg-before4of10 {
    margin-left: 40% !important;
  }

  .u-lg-before5of12 {
    margin-left: 41.66667% !important;
  }

  .u-lg-before1of2,
  .u-lg-before2of4,
  .u-lg-before3of6,
  .u-lg-before4of8,
  .u-lg-before5of10,
  .u-lg-before6of12 {
    margin-left: 50% !important;
  }

  .u-lg-before7of12 {
    margin-left: 58.33333% !important;
  }

  .u-lg-before3of5,
  .u-lg-before6of10 {
    margin-left: 60% !important;
  }

  .u-lg-before5of8 {
    margin-left: 62.5% !important;
  }

  .u-lg-before2of3,
  .u-lg-before4of6,
  .u-lg-before8of12 {
    margin-left: 66.66667% !important;
  }

  .u-lg-before7of10 {
    margin-left: 70% !important;
  }

  .u-lg-before3of4,
  .u-lg-before6of8,
  .u-lg-before9of12 {
    margin-left: 75% !important;
  }

  .u-lg-before4of5,
  .u-lg-before8of10 {
    margin-left: 80% !important;
  }

  .u-lg-before5of6,
  .u-lg-before10of12 {
    margin-left: 83.33333% !important;
  }

  .u-lg-before7of8 {
    margin-left: 87.5% !important;
  }

  .u-lg-before9of10 {
    margin-left: 90% !important;
  }

  .u-lg-before11of12 {
    margin-left: 91.66667% !important;
  }

}

/** @define utilities */

.u-posFit,
.u-posAbsoluteCenter,
.u-posAbsolute {
  position: absolute !important;
}

/**
 * Element will be centered to its nearest relatively-positioned
 * ancestor.
 */

.u-posFixedCenter,
.u-posAbsoluteCenter {
  left: 50% !important;
  top: 50% !important;
  -webkit-transform: translate(-50%, -50%) !important;
          transform: translate(-50%, -50%) !important;
}

.u-posFit,
.u-posFullScreen {
  bottom: 0 !important;
  left: 0 !important;
  margin: auto !important;
  right: 0 !important;
  top: 0 !important;
}

/**
 * 1. Make sure fixed elements are promoted into a new layer, for performance
 *    reasons.
 */

.u-posFullScreen,
.u-posFixedCenter,
.u-posFixed {
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden; /* 1 */
  position: fixed !important;
}

.u-posRelative {
  position: relative !important;
}

.u-posStatic {
  position: static !important;
}

/**
 * @define utilities
 * Sizing utilities
 */

/* Proportional widths
   ========================================================================== */

/**
 * Specify the proportional width of an object.
 * Intentional redundancy build into each set of unit classes.
 * Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
 *
 * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
 *    http://git.io/vllMD
 */

.u-size1of12 {
  -ms-flex-preferred-size: auto !important;
      flex-basis: auto !important;
  width: 8.33333% !important;
}

.u-size1of10 {
  -ms-flex-preferred-size: auto !important;
      flex-basis: auto !important;
  width: 10% !important;
}

.u-size1of8 {
  -ms-flex-preferred-size: auto !important;
      flex-basis: auto !important;
  width: 12.5% !important;
}

.u-size1of6,
.u-size2of12 {
  -ms-flex-preferred-size: auto !important;
      flex-basis: auto !important;
  width: 16.66667% !important;
}

.u-size1of5,
.u-size2of10 {
  -ms-flex-preferred-size: auto !important;
      flex-basis: auto !important;
  width: 20% !important;
}

.u-size1of4,
.u-size2of8,
.u-size3of12 {
  -ms-flex-preferred-size: auto !important;
      flex-basis: auto !important;
  width: 25% !important;
}

.u-size3of10 {
  -ms-flex-preferred-size: auto !important;
      flex-basis: auto !important;
  width: 30% !important;
}

.u-size1of3,
.u-size2of6,
.u-size4of12 {
  -ms-flex-preferred-size: auto !important;
      flex-basis: auto !important;
  width: 33.33333% !important;
}

.u-size3of8 {
  -ms-flex-preferred-size: auto !important;
      flex-basis: auto !important;
  width: 37.5% !important;
}

.u-size2of5,
.u-size4of10 {
  -ms-flex-preferred-size: auto !important;
      flex-basis: auto !important;
  width: 40% !important;
}

.u-size5of12 {
  -ms-flex-preferred-size: auto !important;
      flex-basis: auto !important;
  width: 41.66667% !important;
}

.u-size1of2,
.u-size2of4,
.u-size3of6,
.u-size4of8,
.u-size5of10,
.u-size6of12 {
  -ms-flex-preferred-size: auto !important;
      flex-basis: auto !important;
  width: 50% !important;
}

.u-size7of12 {
  -ms-flex-preferred-size: auto !important;
      flex-basis: auto !important;
  width: 58.33333% !important;
}

.u-size3of5,
.u-size6of10 {
  -ms-flex-preferred-size: auto !important;
      flex-basis: auto !important;
  width: 60% !important;
}

.u-size5of8 {
  -ms-flex-preferred-size: auto !important;
      flex-basis: auto !important;
  width: 62.5% !important;
}

.u-size2of3,
.u-size4of6,
.u-size8of12 {
  -ms-flex-preferred-size: auto !important;
      flex-basis: auto !important;
  width: 66.66667% !important;
}

.u-size7of10 {
  -ms-flex-preferred-size: auto !important;
      flex-basis: auto !important;
  width: 70% !important;
}

.u-size3of4,
.u-size6of8,
.u-size9of12 {
  -ms-flex-preferred-size: auto !important;
      flex-basis: auto !important;
  width: 75% !important;
}

.u-size4of5,
.u-size8of10 {
  -ms-flex-preferred-size: auto !important;
      flex-basis: auto !important;
  width: 80% !important;
}

.u-size5of6,
.u-size10of12 {
  -ms-flex-preferred-size: auto !important;
      flex-basis: auto !important;
  width: 83.33333% !important;
}

.u-size7of8 {
  -ms-flex-preferred-size: auto !important;
      flex-basis: auto !important;
  width: 87.5% !important;
}

.u-size9of10 {
  -ms-flex-preferred-size: auto !important;
      flex-basis: auto !important;
  width: 90% !important;
}

.u-size11of12 {
  -ms-flex-preferred-size: auto !important;
      flex-basis: auto !important;
  width: 91.66667% !important;
}

/* Intrinsic widths
   ========================================================================== */

/**
 * Make an element shrink wrap its content.
 */

.u-sizeFit {
  -ms-flex-preferred-size: auto !important;
      flex-basis: auto !important;
}

/**
 * Make an element fill the remaining space.
 *
 * 1. Be explicit to work around IE10 bug with shorthand flex
 *    http://git.io/vllC7
 * 2. IE10 ignores previous `flex-basis` value. Setting again here fixes
 *    http://git.io/vllMt
 */

.u-sizeFill {
  -webkit-box-flex: 1 !important;
      -ms-flex: 1 1 0% !important;
          flex: 1 1 0% !important; /* 1 */
  -ms-flex-preferred-size: 0% !important;
      flex-basis: 0% !important; /* 2 */
}

/**
 * An alternative method to make an element fill the remaining space.
 * Distributes space based on the initial width and height of the element
 *
 * http://www.w3.org/TR/css-flexbox/images/rel-vs-abs-flex.svg
 */

.u-sizeFillAlt {
  -webkit-box-flex: 1 !important;
      -ms-flex: 1 1 auto !important;
          flex: 1 1 auto !important;
  -ms-flex-preferred-size: auto !important;
      flex-basis: auto !important;
}

/**
 * Make an element the width of its parent.
 */

.u-sizeFull {
  box-sizing: border-box !important;
  display: block !important;
  width: 100% !important;
}

/**
 * @define utilities
 * Size: breakpoint 1 (small)
 */

@media (min-width: 48em) {

  /* Proportional widths: breakpoint 1 (small)
     ======================================================================== */

  /**
   * Specify the proportional width of an object.
   * Intentional redundancy build into each set of unit classes.
   * Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
   *
   * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
   *    http://git.io/vllMD
   */

  .u-sm-size1of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 8.33333% !important;
  }

  .u-sm-size1of10 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 10% !important;
  }

  .u-sm-size1of8 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 12.5% !important;
  }

  .u-sm-size1of6,
  .u-sm-size2of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 16.66667% !important;
  }

  .u-sm-size1of5,
  .u-sm-size2of10 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 20% !important;
  }

  .u-sm-size1of4,
  .u-sm-size2of8,
  .u-sm-size3of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 25% !important;
  }

  .u-sm-size3of10 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 30% !important;
  }

  .u-sm-size1of3,
  .u-sm-size2of6,
  .u-sm-size4of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 33.33333% !important;
  }

  .u-sm-size3of8 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 37.5% !important;
  }

  .u-sm-size2of5,
  .u-sm-size4of10 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 40% !important;
  }

  .u-sm-size5of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 41.66667% !important;
  }

  .u-sm-size1of2,
  .u-sm-size2of4,
  .u-sm-size3of6,
  .u-sm-size4of8,
  .u-sm-size5of10,
  .u-sm-size6of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 50% !important;
  }

  .u-sm-size7of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 58.33333% !important;
  }

  .u-sm-size3of5,
  .u-sm-size6of10 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 60% !important;
  }

  .u-sm-size5of8 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 62.5% !important;
  }

  .u-sm-size2of3,
  .u-sm-size4of6,
  .u-sm-size8of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 66.66667% !important;
  }

  .u-sm-size7of10 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 70% !important;
  }

  .u-sm-size3of4,
  .u-sm-size6of8,
  .u-sm-size9of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 75% !important;
  }

  .u-sm-size4of5,
  .u-sm-size8of10 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 80% !important;
  }

  .u-sm-size5of6,
  .u-sm-size10of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 83.33333% !important;
  }

  .u-sm-size7of8 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 87.5% !important;
  }

  .u-sm-size9of10 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 90% !important;
  }

  .u-sm-size11of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 91.66667% !important;
  }

  /* Intrinsic widths
     ======================================================================== */

  /**
   * Make an element shrink wrap its content.
   */

  .u-sm-sizeFit {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
  }

  /**
   * Make an element fill the remaining space.
   *
   * 1. Be explicit to work around IE10 bug with shorthand flex
   *    http://git.io/vllC7
   * 2. IE10 ignores previous `flex-basis` value. Setting again here fixes
   *    http://git.io/vllMt
   */

  .u-sm-sizeFill {
    -webkit-box-flex: 1 !important;
        -ms-flex: 1 1 0% !important;
            flex: 1 1 0% !important; /* 1 */
    -ms-flex-preferred-size: 0% !important;
        flex-basis: 0% !important; /* 2 */
  }

  /**
   * An alternative method to make an element fill the remaining space.
   * Distributes space based on the initial width and height of the element
   *
   * http://www.w3.org/TR/css-flexbox/images/rel-vs-abs-flex.svg
   */

  .u-sm-sizeFillAlt {
    -webkit-box-flex: 1 !important;
        -ms-flex: 1 1 auto !important;
            flex: 1 1 auto !important;
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
  }

  /**
   * Make an element the width of its parent.
   */

  .u-sm-sizeFull {
    box-sizing: border-box !important;
    display: block !important;
    width: 100% !important;
  }

}

/**
 * @define utilities
 * Size: breakpoint 2 (medium)
 */

@media (min-width: 62em) {

  /* Proportional widths: breakpoint 2 (medium)
     ======================================================================== */

  /**
   * Specify the proportional width of an object.
   * Intentional redundancy build into each set of unit classes.
   * Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
   *
   * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
   *    http://git.io/vllMD
   */

  /* postcss-bem-linter: ignore */

  .u-md-size1of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 8.33333% !important;
  }

  .u-md-size1of10 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 10% !important;
  }

  .u-md-size1of8 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 12.5% !important;
  }

  .u-md-size1of6,
  .u-md-size2of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 16.66667% !important;
  }

  .u-md-size1of5,
  .u-md-size2of10 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 20% !important;
  }

  .u-md-size1of4,
  .u-md-size2of8,
  .u-md-size3of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 25% !important;
  }

  .u-md-size3of10 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 30% !important;
  }

  .u-md-size1of3,
  .u-md-size2of6,
  .u-md-size4of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 33.33333% !important;
  }

  .u-md-size3of8 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 37.5% !important;
  }

  .u-md-size2of5,
  .u-md-size4of10 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 40% !important;
  }

  .u-md-size5of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 41.66667% !important;
  }

  .u-md-size1of2,
  .u-md-size2of4,
  .u-md-size3of6,
  .u-md-size4of8,
  .u-md-size5of10,
  .u-md-size6of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 50% !important;
  }

  .u-md-size7of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 58.33333% !important;
  }

  .u-md-size3of5,
  .u-md-size6of10 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 60% !important;
  }

  .u-md-size5of8 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 62.5% !important;
  }

  .u-md-size2of3,
  .u-md-size4of6,
  .u-md-size8of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 66.66667% !important;
  }

  .u-md-size7of10 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 70% !important;
  }

  .u-md-size3of4,
  .u-md-size6of8,
  .u-md-size9of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 75% !important;
  }

  .u-md-size4of5,
  .u-md-size8of10 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 80% !important;
  }

  .u-md-size5of6,
  .u-md-size10of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 83.33333% !important;
  }

  .u-md-size7of8 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 87.5% !important;
  }

  .u-md-size9of10 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 90% !important;
  }

  .u-md-size11of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 91.66667% !important;
  }

  /* Intrinsic widths
     ======================================================================== */

  /**
   * Make an element shrink wrap its content.
   */

  .u-md-sizeFit {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
  }

  /**
   * Make an element fill the remaining space.
   *
   * 1. Be explicit to work around IE10 bug with shorthand flex
   *    http://git.io/vllC7
   * 2. IE10 ignores previous `flex-basis` value. Setting again here fixes
   *    http://git.io/vllMt
   */

  .u-md-sizeFill {
    -webkit-box-flex: 1 !important;
        -ms-flex: 1 1 0% !important;
            flex: 1 1 0% !important; /* 1 */
    -ms-flex-preferred-size: 0% !important;
        flex-basis: 0% !important; /* 2 */
  }

  /**
   * An alternative method to make an element fill the remaining space.
   * Distributes space based on the initial width and height of the element
   *
   * http://www.w3.org/TR/css-flexbox/images/rel-vs-abs-flex.svg
   */

  .u-md-sizeFillAlt {
    -webkit-box-flex: 1 !important;
        -ms-flex: 1 1 auto !important;
            flex: 1 1 auto !important;
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
  }

  /**
   * Make an element the width of its parent.
   */

  .u-md-sizeFull {
    box-sizing: border-box !important;
    display: block !important;
    width: 100% !important;
  }

}

/**
 * @define utilities
 * Size: breakpoint 3 (large)
 */

@media (min-width: 75em) {

  /* Proportional widths: breakpoint 3 (large)
     ======================================================================== */

  /**
   * Specify the proportional width of an object.
   * Intentional redundancy build into each set of unit classes.
   * Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
   *
   * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
   *    http://git.io/vllMD
   */

  .u-lg-size1of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 8.33333% !important;
  }

  .u-lg-size1of10 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 10% !important;
  }

  .u-lg-size1of8 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 12.5% !important;
  }

  .u-lg-size1of6,
  .u-lg-size2of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 16.66667% !important;
  }

  .u-lg-size1of5,
  .u-lg-size2of10 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 20% !important;
  }

  .u-lg-size1of4,
  .u-lg-size2of8,
  .u-lg-size3of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 25% !important;
  }

  .u-lg-size3of10 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 30% !important;
  }

  .u-lg-size1of3,
  .u-lg-size2of6,
  .u-lg-size4of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 33.33333% !important;
  }

  .u-lg-size3of8 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 37.5% !important;
  }

  .u-lg-size2of5,
  .u-lg-size4of10 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 40% !important;
  }

  .u-lg-size5of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 41.66667% !important;
  }

  .u-lg-size1of2,
  .u-lg-size2of4,
  .u-lg-size3of6,
  .u-lg-size4of8,
  .u-lg-size5of10,
  .u-lg-size6of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 50% !important;
  }

  .u-lg-size7of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 58.33333% !important;
  }

  .u-lg-size3of5,
  .u-lg-size6of10 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 60% !important;
  }

  .u-lg-size5of8 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 62.5% !important;
  }

  .u-lg-size2of3,
  .u-lg-size4of6,
  .u-lg-size8of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 66.66667% !important;
  }

  .u-lg-size7of10 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 70% !important;
  }

  .u-lg-size3of4,
  .u-lg-size6of8,
  .u-lg-size9of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 75% !important;
  }

  .u-lg-size4of5,
  .u-lg-size8of10 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 80% !important;
  }

  .u-lg-size5of6,
  .u-lg-size10of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 83.33333% !important;
  }

  .u-lg-size7of8 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 87.5% !important;
  }

  .u-lg-size9of10 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 90% !important;
  }

  .u-lg-size11of12 {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
    width: 91.66667% !important;
  }

  /* Intrinsic widths
     ======================================================================== */

  /**
   * Make an element shrink wrap its content.
   */

  .u-lg-sizeFit {
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
  }

  /**
   * Make an element fill the remaining space.
   *
   * 1. Be explicit to work around IE10 bug with shorthand flex
   *    http://git.io/vllC7
   * 2. IE10 ignores previous `flex-basis` value. Setting again here fixes
   *    http://git.io/vllMt
   */

  .u-lg-sizeFill {
    -webkit-box-flex: 1 !important;
        -ms-flex: 1 1 0% !important;
            flex: 1 1 0% !important; /* 1 */
    -ms-flex-preferred-size: 0% !important;
        flex-basis: 0% !important; /* 2 */
  }

  /**
   * An alternative method to make an element fill the remaining space.
   * Distributes space based on the initial width and height of the element
   *
   * http://www.w3.org/TR/css-flexbox/images/rel-vs-abs-flex.svg
   */

  .u-lg-sizeFillAlt {
    -webkit-box-flex: 1 !important;
        -ms-flex: 1 1 auto !important;
            flex: 1 1 auto !important;
    -ms-flex-preferred-size: auto !important;
        flex-basis: auto !important;
  }

  /**
   * Make an element the width of its parent.
   */

  .u-lg-sizeFull {
    box-sizing: border-box !important;
    display: block !important;
    width: 100% !important;
  }

}

/**
 * Word breaking
 *
 * Break strings when their length exceeds the width of their container.
 */

.u-textBreak {
  word-wrap: break-word !important;
}

/**
 * Horizontal text alignment
 */

.u-textCenter {
  text-align: center !important;
}

.u-textLeft {
  text-align: left !important;
}

.u-textRight {
  text-align: right !important;
}

/**
 * Inherit the ancestor's text color.
 */

.u-textInheritColor {
  color: inherit !important;
}

/**
 * Enables font kerning in all browsers.
 * http://blog.typekit.com/2014/02/05/kerning-on-the-web/
 *
 * 1. Chrome (not Windows), Firefox, IE 10+
 * 2. Safari 7 and future browsers
 * 3. Chrome (not Windows), Firefox, Safari 6+, iOS, Android
 */

.u-textKern {
  -webkit-font-feature-settings: "kern" 1;
          font-feature-settings: "kern" 1; /* 1 */
  -webkit-font-kerning: normal;
          font-kerning: normal; /* 2 */
  text-rendering: optimizeLegibility; /* 3 */
}

/**
 * Prevent whitespace wrapping
 */

.u-textNoWrap {
  white-space: nowrap !important;
}

/**
 * Text truncation
 *
 * Prevent text from wrapping onto multiple lines, and truncate with an
 * ellipsis.
 *
 * 1. Ensure that the node has a maximum width after which truncation can
 *    occur.
 * 2. Fix for IE 8/9 if `word-wrap: break-word` is in effect on ancestor
 *    nodes.
 */

.u-textTruncate {
  max-width: 100%; /* 1 */
  overflow: hidden !important;
  text-overflow: ellipsis !important;
  white-space: nowrap !important;
  word-wrap: normal !important; /* 2 */
}

/** @define utilities */

/* Applies to flex container
   ========================================================================== */

/**
 * Container
 */

.u-flex {
  display: -webkit-box !important;
  display: -ms-flexbox !important;
  display: flex !important;
}

.u-flexInline {
  display: -webkit-inline-box !important;
  display: -ms-inline-flexbox !important;
  display: inline-flex !important;
}

/**
 * Direction: row
 */

.u-flexRow {
  -webkit-box-orient: horizontal !important;
  -webkit-box-direction: normal !important;
      -ms-flex-direction: row !important;
          flex-direction: row !important;
}

.u-flexRowReverse {
  -webkit-box-orient: horizontal !important;
  -webkit-box-direction: reverse !important;
      -ms-flex-direction: row-reverse !important;
          flex-direction: row-reverse !important;
}

/**
 * Direction: column
 */

.u-flexCol {
  -webkit-box-orient: vertical !important;
  -webkit-box-direction: normal !important;
      -ms-flex-direction: column !important;
          flex-direction: column !important;
}

.u-flexColReverse {
  -webkit-box-orient: vertical !important;
  -webkit-box-direction: reverse !important;
      -ms-flex-direction: column-reverse !important;
          flex-direction: column-reverse !important;
}

/**
 * Wrap
 */

.u-flexWrap {
  -ms-flex-wrap: wrap !important;
      flex-wrap: wrap !important;
}

.u-flexNoWrap {
  -ms-flex-wrap: nowrap !important;
      flex-wrap: nowrap !important;
}

.u-flexWrapReverse {
  -ms-flex-wrap: wrap-reverse !important;
      flex-wrap: wrap-reverse !important;
}

/**
 * Align items along the main axis of the current line of the flex container
 */

.u-flexJustifyStart {
  -webkit-box-pack: start !important;
      -ms-flex-pack: start !important;
          justify-content: flex-start !important;
}

.u-flexJustifyEnd {
  -webkit-box-pack: end !important;
      -ms-flex-pack: end !important;
          justify-content: flex-end !important;
}

.u-flexJustifyCenter {
  -webkit-box-pack: center !important;
      -ms-flex-pack: center !important;
          justify-content: center !important;
}

.u-flexJustifyBetween {
  -webkit-box-pack: justify !important;
      -ms-flex-pack: justify !important;
          justify-content: space-between !important;
}

.u-flexJustifyAround {
  -ms-flex-pack: distribute !important;
      justify-content: space-around !important;
}

/**
 * Align items in the cross axis of the current line of the flex container
 * Similar to `justify-content` but in the perpendicular direction
 */

.u-flexAlignItemsStart {
  -webkit-box-align: start !important;
      -ms-flex-align: start !important;
              -ms-grid-row-align: flex-start !important;
          align-items: flex-start !important;
}

.u-flexAlignItemsEnd {
  -webkit-box-align: end !important;
      -ms-flex-align: end !important;
              -ms-grid-row-align: flex-end !important;
          align-items: flex-end !important;
}

.u-flexAlignItemsCenter {
  -webkit-box-align: center !important;
      -ms-flex-align: center !important;
              -ms-grid-row-align: center !important;
          align-items: center !important;
}

.u-flexAlignItemsStretch {
  -webkit-box-align: stretch !important;
      -ms-flex-align: stretch !important;
              -ms-grid-row-align: stretch !important;
          align-items: stretch !important;
}

.u-flexAlignItemsBaseline {
  -webkit-box-align: baseline !important;
      -ms-flex-align: baseline !important;
              -ms-grid-row-align: baseline !important;
          align-items: baseline !important;
}

/**
 * Aligns items within the flex container when there is extra
 * space in the cross-axis
 *
 * Has no effect when there is only one line of flex items.
 */

.u-flexAlignContentStart {
  -ms-flex-line-pack: start !important;
      align-content: flex-start !important;
}

.u-flexAlignContentEnd {
  -ms-flex-line-pack: end !important;
      align-content: flex-end !important;
}

.u-flexAlignContentCenter {
  -ms-flex-line-pack: center !important;
      align-content: center !important;
}

.u-flexAlignContentStretch {
  -ms-flex-line-pack: stretch !important;
      align-content: stretch !important;
}

.u-flexAlignContentBetween {
  -ms-flex-line-pack: justify !important;
      align-content: space-between !important;
}

.u-flexAlignContentAround {
  -ms-flex-line-pack: distribute !important;
      align-content: space-around !important;
}

/**
 * 1. Set the flex-shrink default explicitly to fix IE10 - http://git.io/vllC7
 */

/* postcss-bem-linter: ignore */

.u-flex > *,
.u-flexInline > * {
  -ms-flex-negative: 1;
      flex-shrink: 1; /* 1 */
}

/* Applies to flex items
   ========================================================================== */

/**
 * Override default alignment of single item when specified by `align-items`
 */

.u-flexAlignSelfStart {
  -ms-flex-item-align: start !important;
      align-self: flex-start !important;
}

.u-flexAlignSelfEnd {
  -ms-flex-item-align: end !important;
      align-self: flex-end !important;
}

.u-flexAlignSelfCenter {
  -ms-flex-item-align: center !important;
      align-self: center !important;
}

.u-flexAlignSelfStretch {
  -ms-flex-item-align: stretch !important;
      align-self: stretch !important;
}

.u-flexAlignSelfBaseline {
  -ms-flex-item-align: baseline !important;
      align-self: baseline !important;
}

.u-flexAlignSelfAuto {
  -ms-flex-item-align: auto !important;
      align-self: auto !important;
}

/**
 * Change order without editing underlying HTML
 */

.u-flexOrderFirst {
  -webkit-box-ordinal-group: 0 !important;
      -ms-flex-order: -1 !important;
          order: -1 !important;
}

.u-flexOrderLast {
  -webkit-box-ordinal-group: 2 !important;
      -ms-flex-order: 1 !important;
          order: 1 !important;
}

.u-flexOrderNone {
  -webkit-box-ordinal-group: 1 !important;
      -ms-flex-order: 0 !important;
          order: 0 !important;
}

/**
 * Specify the flex grow factor, which determines how much the flex item will
 * grow relative to the rest of the flex items in the flex container.
 *
 * Supports 1-5 proportions
 *
 * 1. Provide all values to avoid IE10 bug with shorthand flex
 *    - http://git.io/vllC7
 *
 *    Use `0%` to avoid bug in IE10/11 with unitless flex basis. Using this
 *    instead of `auto` as this matches what the default would be with `flex`
 *    shorthand - http://git.io/vllWx
 */

.u-flexGrow1 {
  -webkit-box-flex: 1 !important;
      -ms-flex: 1 1 0% !important;
          flex: 1 1 0% !important; /* 1 */
}

.u-flexGrow2 {
  -webkit-box-flex: 2 !important;
      -ms-flex: 2 1 0% !important;
          flex: 2 1 0% !important;
}

.u-flexGrow3 {
  -webkit-box-flex: 3 !important;
      -ms-flex: 3 1 0% !important;
          flex: 3 1 0% !important;
}

.u-flexGrow4 {
  -webkit-box-flex: 4 !important;
      -ms-flex: 4 1 0% !important;
          flex: 4 1 0% !important;
}

.u-flexGrow5 {
  -webkit-box-flex: 5 !important;
      -ms-flex: 5 1 0% !important;
          flex: 5 1 0% !important;
}

/**
 * Aligning with `auto` margins
 * http://www.w3.org/TR/css-flexbox-1/#auto-margins
 */

.u-flexExpand {
  margin: auto !important;
}

.u-flexExpandLeft {
  margin-left: auto !important;
}

.u-flexExpandRight {
  margin-right: auto !important;
}

.u-flexExpandTop {
  margin-top: auto !important;
}

.u-flexExpandBottom {
  margin-bottom: auto !important;
}

/**
 * @define utilities
 * Size: breakpoint 1 (small)
 */

@media (min-width: 48em) {

  /* Applies to flex container
     ======================================================================== */

  /**
   * Container
   */

  .u-sm-flex {
    display: -webkit-box !important;
    display: -ms-flexbox !important;
    display: flex !important;
  }

  .u-sm-flexInline {
    display: -webkit-inline-box !important;
    display: -ms-inline-flexbox !important;
    display: inline-flex !important;
  }

  /**
   * Direction: row
   */

  .u-sm-flexRow {
    -webkit-box-orient: horizontal !important;
    -webkit-box-direction: normal !important;
        -ms-flex-direction: row !important;
            flex-direction: row !important;
  }

  .u-sm-flexRowReverse {
    -webkit-box-orient: horizontal !important;
    -webkit-box-direction: reverse !important;
        -ms-flex-direction: row-reverse !important;
            flex-direction: row-reverse !important;
  }

  /**
   * Direction: column
   */

  .u-sm-flexCol {
    -webkit-box-orient: vertical !important;
    -webkit-box-direction: normal !important;
        -ms-flex-direction: column !important;
            flex-direction: column !important;
  }

  .u-sm-flexColReverse {
    -webkit-box-orient: vertical !important;
    -webkit-box-direction: reverse !important;
        -ms-flex-direction: column-reverse !important;
            flex-direction: column-reverse !important;
  }

  /**
   * Wrap
   */

  .u-sm-flexWrap {
    -ms-flex-wrap: wrap !important;
        flex-wrap: wrap !important;
  }

  .u-sm-flexNoWrap {
    -ms-flex-wrap: nowrap !important;
        flex-wrap: nowrap !important;
  }

  .u-sm-flexWrapReverse {
    -ms-flex-wrap: wrap-reverse !important;
        flex-wrap: wrap-reverse !important;
  }

  /**
   * Align items along the main axis of the current line of the flex container
   */

  .u-sm-flexJustifyStart {
    -webkit-box-pack: start !important;
        -ms-flex-pack: start !important;
            justify-content: flex-start !important;
  }

  .u-sm-flexJustifyEnd {
    -webkit-box-pack: end !important;
        -ms-flex-pack: end !important;
            justify-content: flex-end !important;
  }

  .u-sm-flexJustifyCenter {
    -webkit-box-pack: center !important;
        -ms-flex-pack: center !important;
            justify-content: center !important;
  }

  .u-sm-flexJustifyBetween {
    -webkit-box-pack: justify !important;
        -ms-flex-pack: justify !important;
            justify-content: space-between !important;
  }

  .u-sm-flexJustifyAround {
    -ms-flex-pack: distribute !important;
        justify-content: space-around !important;
  }

  /**
   * Align items in the cross axis of the current line of the flex container
   * Similar to `justify-content` but in the perpendicular direction
   */

  .u-sm-flexAlignItemsStart {
    -webkit-box-align: start !important;
        -ms-flex-align: start !important;
                -ms-grid-row-align: flex-start !important;
            align-items: flex-start !important;
  }

  .u-sm-flexAlignItemsEnd {
    -webkit-box-align: end !important;
        -ms-flex-align: end !important;
                -ms-grid-row-align: flex-end !important;
            align-items: flex-end !important;
  }

  .u-sm-flexAlignItemsCenter {
    -webkit-box-align: center !important;
        -ms-flex-align: center !important;
                -ms-grid-row-align: center !important;
            align-items: center !important;
  }

  .u-sm-flexAlignItemsStretch {
    -webkit-box-align: stretch !important;
        -ms-flex-align: stretch !important;
                -ms-grid-row-align: stretch !important;
            align-items: stretch !important;
  }

  .u-sm-flexAlignItemsBaseline {
    -webkit-box-align: baseline !important;
        -ms-flex-align: baseline !important;
                -ms-grid-row-align: baseline !important;
            align-items: baseline !important;
  }

  /**
   * Aligns items within the flex container when there is extra
   * space in the cross-axis
   *
   * Has no effect when there is only one line of flex items.
   */

  .u-sm-flexAlignContentStart {
    -ms-flex-line-pack: start !important;
        align-content: flex-start !important;
  }

  .u-sm-flexAlignContentEnd {
    -ms-flex-line-pack: end !important;
        align-content: flex-end !important;
  }

  .u-sm-flexAlignContentCenter {
    -ms-flex-line-pack: center !important;
        align-content: center !important;
  }

  .u-sm-flexAlignContentStretch {
    -ms-flex-line-pack: stretch !important;
        align-content: stretch !important;
  }

  .u-sm-flexAlignContentBetween {
    -ms-flex-line-pack: justify !important;
        align-content: space-between !important;
  }

  .u-sm-flexAlignContentAround {
    -ms-flex-line-pack: distribute !important;
        align-content: space-around !important;
  }

  /**
   * 1. Set the flex-shrink default explicitly to fix IE10 - http://git.io/vllC7
   */

  /* postcss-bem-linter: ignore */

  .u-sm-flex > *,
  .u-sm-flexInline > * {
    -ms-flex-negative: 1;
        flex-shrink: 1; /* 1 */
  }

  /* Applies to flex items
     ======================================================================== */

  /**
   * Override default alignment of single item when specified by `align-items`
   */

  .u-sm-flexAlignSelfStart {
    -ms-flex-item-align: start !important;
        align-self: flex-start !important;
  }

  .u-sm-flexAlignSelfEnd {
    -ms-flex-item-align: end !important;
        align-self: flex-end !important;
  }

  .u-sm-flexAlignSelfCenter {
    -ms-flex-item-align: center !important;
        align-self: center !important;
  }

  .u-sm-flexAlignSelfStretch {
    -ms-flex-item-align: stretch !important;
        align-self: stretch !important;
  }

  .u-sm-flexAlignSelfBaseline {
    -ms-flex-item-align: baseline !important;
        align-self: baseline !important;
  }

  .u-sm-flexAlignSelfAuto {
    -ms-flex-item-align: auto !important;
        align-self: auto !important;
  }

  /**
   * Change order without editing underlying HTML
   */

  .u-sm-flexOrderFirst {
    -webkit-box-ordinal-group: 0 !important;
        -ms-flex-order: -1 !important;
            order: -1 !important;
  }

  .u-sm-flexOrderLast {
    -webkit-box-ordinal-group: 2 !important;
        -ms-flex-order: 1 !important;
            order: 1 !important;
  }

  .u-sm-flexOrderNone {
    -webkit-box-ordinal-group: 1 !important;
        -ms-flex-order: 0 !important;
            order: 0 !important;
  }

  /**
   * Specify the flex grow factor, which determines how much the flex item will
   * grow relative to the rest of the flex items in the flex container.
   *
   * Supports 1-5 proportions
   *
   * 1. Provide all values to avoid IE10 bug with shorthand flex
   *    http://git.io/vllC7
   *
   *    Use `0%` to avoid bug in IE10/11 with unitless flex basis
   *    http://git.io/vllWx
   */

  .u-sm-flexGrow1 {
    -webkit-box-flex: 1 !important;
        -ms-flex: 1 1 0% !important;
            flex: 1 1 0% !important; /* 1 */
  }

  .u-sm-flexGrow2 {
    -webkit-box-flex: 2 !important;
        -ms-flex: 2 1 0% !important;
            flex: 2 1 0% !important;
  }

  .u-sm-flexGrow3 {
    -webkit-box-flex: 3 !important;
        -ms-flex: 3 1 0% !important;
            flex: 3 1 0% !important;
  }

  .u-sm-flexGrow4 {
    -webkit-box-flex: 4 !important;
        -ms-flex: 4 1 0% !important;
            flex: 4 1 0% !important;
  }

  .u-sm-flexGrow5 {
    -webkit-box-flex: 5 !important;
        -ms-flex: 5 1 0% !important;
            flex: 5 1 0% !important;
  }

  /**
   * Aligning with `auto` margins
   * http://www.w3.org/TR/css-flexbox-1/#auto-margins
   */

  .u-sm-flexExpand {
    margin: auto !important;
  }

  .u-sm-flexExpandLeft {
    margin-left: auto !important;
  }

  .u-sm-flexExpandRight {
    margin-right: auto !important;
  }

  .u-sm-flexExpandTop {
    margin-top: auto !important;
  }

  .u-sm-flexExpandBottom {
    margin-bottom: auto !important;
  }

}

/**
 * @define utilities
 * Size: breakpoint 1 (medium)
 */

@media (min-width: 62em) {

  /* Applies to flex container
     ======================================================================== */

  /**
   * Container
   */

  .u-md-flex {
    display: -webkit-box !important;
    display: -ms-flexbox !important;
    display: flex !important;
  }

  .u-md-flexInline {
    display: -webkit-inline-box !important;
    display: -ms-inline-flexbox !important;
    display: inline-flex !important;
  }

  /**
   * Direction: row
   */

  .u-md-flexRow {
    -webkit-box-orient: horizontal !important;
    -webkit-box-direction: normal !important;
        -ms-flex-direction: row !important;
            flex-direction: row !important;
  }

  .u-md-flexRowReverse {
    -webkit-box-orient: horizontal !important;
    -webkit-box-direction: reverse !important;
        -ms-flex-direction: row-reverse !important;
            flex-direction: row-reverse !important;
  }

  /**
   * Direction: column
   */

  .u-md-flexCol {
    -webkit-box-orient: vertical !important;
    -webkit-box-direction: normal !important;
        -ms-flex-direction: column !important;
            flex-direction: column !important;
  }

  .u-md-flexColReverse {
    -webkit-box-orient: vertical !important;
    -webkit-box-direction: reverse !important;
        -ms-flex-direction: column-reverse !important;
            flex-direction: column-reverse !important;
  }

  /**
   * Wrap
   */

  .u-md-flexWrap {
    -ms-flex-wrap: wrap !important;
        flex-wrap: wrap !important;
  }

  .u-md-flexNoWrap {
    -ms-flex-wrap: nowrap !important;
        flex-wrap: nowrap !important;
  }

  .u-md-flexWrapReverse {
    -ms-flex-wrap: wrap-reverse !important;
        flex-wrap: wrap-reverse !important;
  }

  /**
   * Align items along the main axis of the current line of the flex container
   */

  .u-md-flexJustifyStart {
    -webkit-box-pack: start !important;
        -ms-flex-pack: start !important;
            justify-content: flex-start !important;
  }

  .u-md-flexJustifyEnd {
    -webkit-box-pack: end !important;
        -ms-flex-pack: end !important;
            justify-content: flex-end !important;
  }

  .u-md-flexJustifyCenter {
    -webkit-box-pack: center !important;
        -ms-flex-pack: center !important;
            justify-content: center !important;
  }

  .u-md-flexJustifyBetween {
    -webkit-box-pack: justify !important;
        -ms-flex-pack: justify !important;
            justify-content: space-between !important;
  }

  .u-md-flexJustifyAround {
    -ms-flex-pack: distribute !important;
        justify-content: space-around !important;
  }

  /**
   * Align items in the cross axis of the current line of the flex container
   * Similar to `justify-content` but in the perpendicular direction
   */

  .u-md-flexAlignItemsStart {
    -webkit-box-align: start !important;
        -ms-flex-align: start !important;
                -ms-grid-row-align: flex-start !important;
            align-items: flex-start !important;
  }

  .u-md-flexAlignItemsEnd {
    -webkit-box-align: end !important;
        -ms-flex-align: end !important;
                -ms-grid-row-align: flex-end !important;
            align-items: flex-end !important;
  }

  .u-md-flexAlignItemsCenter {
    -webkit-box-align: center !important;
        -ms-flex-align: center !important;
                -ms-grid-row-align: center !important;
            align-items: center !important;
  }

  .u-md-flexAlignItemsStretch {
    -webkit-box-align: stretch !important;
        -ms-flex-align: stretch !important;
                -ms-grid-row-align: stretch !important;
            align-items: stretch !important;
  }

  .u-md-flexAlignItemsBaseline {
    -webkit-box-align: baseline !important;
        -ms-flex-align: baseline !important;
                -ms-grid-row-align: baseline !important;
            align-items: baseline !important;
  }

  /**
   * Aligns items within the flex container when there is extra
   * space in the cross-axis
   *
   * Has no effect when there is only one line of flex items.
   */

  .u-md-flexAlignContentStart {
    -ms-flex-line-pack: start !important;
        align-content: flex-start !important;
  }

  .u-md-flexAlignContentEnd {
    -ms-flex-line-pack: end !important;
        align-content: flex-end !important;
  }

  .u-md-flexAlignContentCenter {
    -ms-flex-line-pack: center !important;
        align-content: center !important;
  }

  .u-md-flexAlignContentStretch {
    -ms-flex-line-pack: stretch !important;
        align-content: stretch !important;
  }

  .u-md-flexAlignContentBetween {
    -ms-flex-line-pack: justify !important;
        align-content: space-between !important;
  }

  .u-md-flexAlignContentAround {
    -ms-flex-line-pack: distribute !important;
        align-content: space-around !important;
  }

  /**
   * 1. Set the flex-shrink default explicitly to fix IE10 - http://git.io/vllC7
   */

  /* postcss-bem-linter: ignore */

  .u-md-flex > *,
  .u-md-flexInline > * {
    -ms-flex-negative: 1;
        flex-shrink: 1; /* 1 */
  }

  /* Applies to flex items
     ======================================================================== */

  /**
   * Override default alignment of single item when specified by `align-items`
   */

  .u-md-flexAlignSelfStart {
    -ms-flex-item-align: start !important;
        align-self: flex-start !important;
  }

  .u-md-flexAlignSelfEnd {
    -ms-flex-item-align: end !important;
        align-self: flex-end !important;
  }

  .u-md-flexAlignSelfCenter {
    -ms-flex-item-align: center !important;
        align-self: center !important;
  }

  .u-md-flexAlignSelfStretch {
    -ms-flex-item-align: stretch !important;
        align-self: stretch !important;
  }

  .u-md-flexAlignSelfBaseline {
    -ms-flex-item-align: baseline !important;
        align-self: baseline !important;
  }

  .u-md-flexAlignSelfAuto {
    -ms-flex-item-align: auto !important;
        align-self: auto !important;
  }

  /**
   * Change order without editing underlying HTML
   */

  .u-md-flexOrderFirst {
    -webkit-box-ordinal-group: 0 !important;
        -ms-flex-order: -1 !important;
            order: -1 !important;
  }

  .u-md-flexOrderLast {
    -webkit-box-ordinal-group: 2 !important;
        -ms-flex-order: 1 !important;
            order: 1 !important;
  }

  .u-md-flexOrderNone {
    -webkit-box-ordinal-group: 1 !important;
        -ms-flex-order: 0 !important;
            order: 0 !important;
  }

  /**
   * Specify the flex grow factor, which determines how much the flex item will
   * grow relative to the rest of the flex items in the flex container.
   *
   * Supports 1-5 proportions
   *
   * 1. Provide all values to avoid IE10 bug with shorthand flex
   *    http://git.io/vllC7
   *
   *    Use `0%` to avoid bug in IE10/11 with unitless flex basis
   *    http://git.io/vllWx
   */

  .u-md-flexGrow1 {
    -webkit-box-flex: 1 !important;
        -ms-flex: 1 1 0% !important;
            flex: 1 1 0% !important; /* 1 */
  }

  .u-md-flexGrow2 {
    -webkit-box-flex: 2 !important;
        -ms-flex: 2 1 0% !important;
            flex: 2 1 0% !important;
  }

  .u-md-flexGrow3 {
    -webkit-box-flex: 3 !important;
        -ms-flex: 3 1 0% !important;
            flex: 3 1 0% !important;
  }

  .u-md-flexGrow4 {
    -webkit-box-flex: 4 !important;
        -ms-flex: 4 1 0% !important;
            flex: 4 1 0% !important;
  }

  .u-md-flexGrow5 {
    -webkit-box-flex: 5 !important;
        -ms-flex: 5 1 0% !important;
            flex: 5 1 0% !important;
  }

  /**
   * Aligning with `auto` margins
   * http://www.w3.org/TR/css-flexbox-1/#auto-margins
   */

  .u-md-flexExpand {
    margin: auto !important;
  }

  .u-md-flexExpandLeft {
    margin-left: auto !important;
  }

  .u-md-flexExpandRight {
    margin-right: auto !important;
  }

  .u-md-flexExpandTop {
    margin-top: auto !important;
  }

  .u-md-flexExpandBottom {
    margin-bottom: auto !important;
  }

}

/**
 * @define utilities
 * Size: breakpoint 1 (large)
 */

@media (min-width: 75em) {

  /* Applies to flex container
     ======================================================================== */

  /**
   * Container
   */

  .u-lg-flex {
    display: -webkit-box !important;
    display: -ms-flexbox !important;
    display: flex !important;
  }

  .u-lg-flexInline {
    display: -webkit-inline-box !important;
    display: -ms-inline-flexbox !important;
    display: inline-flex !important;
  }

  /**
   * Direction: row
   */

  .u-lg-flexRow {
    -webkit-box-orient: horizontal !important;
    -webkit-box-direction: normal !important;
        -ms-flex-direction: row !important;
            flex-direction: row !important;
  }

  .u-lg-flexRowReverse {
    -webkit-box-orient: horizontal !important;
    -webkit-box-direction: reverse !important;
        -ms-flex-direction: row-reverse !important;
            flex-direction: row-reverse !important;
  }

  /**
   * Direction: column
   */

  .u-lg-flexCol {
    -webkit-box-orient: vertical !important;
    -webkit-box-direction: normal !important;
        -ms-flex-direction: column !important;
            flex-direction: column !important;
  }

  .u-lg-flexColReverse {
    -webkit-box-orient: vertical !important;
    -webkit-box-direction: reverse !important;
        -ms-flex-direction: column-reverse !important;
            flex-direction: column-reverse !important;
  }

  /**
   * Wrap
   */

  .u-lg-flexWrap {
    -ms-flex-wrap: wrap !important;
        flex-wrap: wrap !important;
  }

  .u-lg-flexNoWrap {
    -ms-flex-wrap: nowrap !important;
        flex-wrap: nowrap !important;
  }

  .u-lg-flexWrapReverse {
    -ms-flex-wrap: wrap-reverse !important;
        flex-wrap: wrap-reverse !important;
  }

  /**
   * Align items along the main axis of the current line of the flex container
   */

  .u-lg-flexJustifyStart {
    -webkit-box-pack: start !important;
        -ms-flex-pack: start !important;
            justify-content: flex-start !important;
  }

  .u-lg-flexJustifyEnd {
    -webkit-box-pack: end !important;
        -ms-flex-pack: end !important;
            justify-content: flex-end !important;
  }

  .u-lg-flexJustifyCenter {
    -webkit-box-pack: center !important;
        -ms-flex-pack: center !important;
            justify-content: center !important;
  }

  .u-lg-flexJustifyBetween {
    -webkit-box-pack: justify !important;
        -ms-flex-pack: justify !important;
            justify-content: space-between !important;
  }

  .u-lg-flexJustifyAround {
    -ms-flex-pack: distribute !important;
        justify-content: space-around !important;
  }

  /**
   * Align items in the cross axis of the current line of the flex container
   * Similar to `justify-content` but in the perpendicular direction
   */

  .u-lg-flexAlignItemsStart {
    -webkit-box-align: start !important;
        -ms-flex-align: start !important;
                -ms-grid-row-align: flex-start !important;
            align-items: flex-start !important;
  }

  .u-lg-flexAlignItemsEnd {
    -webkit-box-align: end !important;
        -ms-flex-align: end !important;
                -ms-grid-row-align: flex-end !important;
            align-items: flex-end !important;
  }

  .u-lg-flexAlignItemsCenter {
    -webkit-box-align: center !important;
        -ms-flex-align: center !important;
                -ms-grid-row-align: center !important;
            align-items: center !important;
  }

  .u-lg-flexAlignItemsStretch {
    -webkit-box-align: stretch !important;
        -ms-flex-align: stretch !important;
                -ms-grid-row-align: stretch !important;
            align-items: stretch !important;
  }

  .u-lg-flexAlignItemsBaseline {
    -webkit-box-align: baseline !important;
        -ms-flex-align: baseline !important;
                -ms-grid-row-align: baseline !important;
            align-items: baseline !important;
  }

  /**
   * Aligns items within the flex container when there is extra
   * space in the cross-axis
   *
   * Has no effect when there is only one line of flex items.
   */

  .u-lg-flexAlignContentStart {
    -ms-flex-line-pack: start !important;
        align-content: flex-start !important;
  }

  .u-lg-flexAlignContentEnd {
    -ms-flex-line-pack: end !important;
        align-content: flex-end !important;
  }

  .u-lg-flexAlignContentCenter {
    -ms-flex-line-pack: center !important;
        align-content: center !important;
  }

  .u-lg-flexAlignContentStretch {
    -ms-flex-line-pack: stretch !important;
        align-content: stretch !important;
  }

  .u-lg-flexAlignContentBetween {
    -ms-flex-line-pack: justify !important;
        align-content: space-between !important;
  }

  .u-lg-flexAlignContentAround {
    -ms-flex-line-pack: distribute !important;
        align-content: space-around !important;
  }

  /**
   * 1. Set the flex-shrink default explicitly to fix IE10 - http://git.io/vllC7
   */

  /* postcss-bem-linter: ignore */

  .u-lg-flex > *,
  .u-lg-flexInline > * {
    -ms-flex-negative: 1;
        flex-shrink: 1; /* 1 */
  }

  /* Applies to flex items
     ======================================================================== */

  /**
   * Override default alignment of single item when specified by `align-items`
   */

  .u-lg-flexAlignSelfStart {
    -ms-flex-item-align: start !important;
        align-self: flex-start !important;
  }

  .u-lg-flexAlignSelfEnd {
    -ms-flex-item-align: end !important;
        align-self: flex-end !important;
  }

  .u-lg-flexAlignSelfCenter {
    -ms-flex-item-align: center !important;
        align-self: center !important;
  }

  .u-lg-flexAlignSelfStretch {
    -ms-flex-item-align: stretch !important;
        align-self: stretch !important;
  }

  .u-lg-flexAlignSelfBaseline {
    -ms-flex-item-align: baseline !important;
        align-self: baseline !important;
  }

  .u-lg-flexAlignSelfAuto {
    -ms-flex-item-align: auto !important;
        align-self: auto !important;
  }

  /**
   * Change order without editing underlying HTML
   */

  .u-lg-flexOrderFirst {
    -webkit-box-ordinal-group: 0 !important;
        -ms-flex-order: -1 !important;
            order: -1 !important;
  }

  .u-lg-flexOrderLast {
    -webkit-box-ordinal-group: 2 !important;
        -ms-flex-order: 1 !important;
            order: 1 !important;
  }

  .u-lg-flexOrderNone {
    -webkit-box-ordinal-group: 1 !important;
        -ms-flex-order: 0 !important;
            order: 0 !important;
  }

  /**
   * Specify the flex grow factor, which determines how much the flex item will
   * grow relative to the rest of the flex items in the flex container.
   *
   * Supports 1-5 proportions
   *
   * 1. Provide all values to avoid IE10 bug with shorthand flex
   *    http://git.io/vllC7
   *
   *    Use `0%` to avoid bug in IE10/11 with unitless flex basis
   *    http://git.io/vllWx
   */

  .u-lg-flexGrow1 {
    -webkit-box-flex: 1 !important;
        -ms-flex: 1 1 0% !important;
            flex: 1 1 0% !important; /* 1 */
  }

  .u-lg-flexGrow2 {
    -webkit-box-flex: 2 !important;
        -ms-flex: 2 1 0% !important;
            flex: 2 1 0% !important;
  }

  .u-lg-flexGrow3 {
    -webkit-box-flex: 3 !important;
        -ms-flex: 3 1 0% !important;
            flex: 3 1 0% !important;
  }

  .u-lg-flexGrow4 {
    -webkit-box-flex: 4 !important;
        -ms-flex: 4 1 0% !important;
            flex: 4 1 0% !important;
  }

  .u-lg-flexGrow5 {
    -webkit-box-flex: 5 !important;
        -ms-flex: 5 1 0% !important;
            flex: 5 1 0% !important;
  }

  /**
   * Aligning with `auto` margins
   * http://www.w3.org/TR/css-flexbox-1/#auto-margins
   */

  .u-lg-flexExpand {
    margin: auto !important;
  }

  .u-lg-flexExpandLeft {
    margin-left: auto !important;
  }

  .u-lg-flexExpandRight {
    margin-right: auto !important;
  }

  .u-lg-flexExpandTop {
    margin-top: auto !important;
  }

  .u-lg-flexExpandBottom {
    margin-bottom: auto !important;
  }

}

/** @define Arrange; weak */

/**
 * This component lets you lay out a row of cells in various ways. You can
 * specify whether a cell should be wide enough to fit its content, or take up
 * the remaining space in the row. It's also possible to give all cells an
 * equal width, and to control their vertical alignment.
 */

/**
 * 1. Protect against the component expanding beyond the confines of its
 *    container if properties affecting the box-model are applied to the
 *    component. Mainly necessary because of (5).
 * 2. Rely on table layout.
 * 3. Zero out the default spacing that might be on an element (e.g., `ul`).
 * 4. Make sure the component fills at least the full width of its parent.
 * 5. Reset the table-layout algorithm in case a component is nested.
 */

.Arrange {
  box-sizing: border-box; /* 1 */
  display: table; /* 2 */
  margin: 0; /* 3 */
  min-width: 100%; /* 4 */
  padding: 0; /* 3 */
  table-layout: auto; /* 5 */
}

/**
 * There are three possible types of child. `sizeFill` will expand to fill all
 * of the remaining space not filled by `sizeFit` elements. `row` will begin a
 * new row context, keeping columns the same size.
 *
 * 1. Zero out any default spacing that might be on an element (e.g., `li`);
 *    Margin has no effect when coupled with `display: table-cell`.
 * 2. All cells are top-aligned by default
 */

.Arrange-sizeFill,
.Arrange-sizeFit {
  display: table-cell;
  padding: 0; /* 1 */
  vertical-align: top; /* 2 */
}

/**
 * Make sure the main content block expands to fill the remaining space.
 */

.Arrange-sizeFill {
  width: 100%;
}

/**
 * Where possible, protect against large images breaking the layout. Prevent them from
 * exceeding the width of the main content block by making them fluid.
 *
 * Only work for all browsers with the `Arrange--equally` variant. For Firefox
 * and IE to constrain image dimensions for other layouts, large images will
 * need their width set to `100%`.
 */

.Arrange-sizeFill img {
  height: auto;
  max-width: 100%;
}

/**
 * Defend against a side-effect of this layout pattern: images in
 * 'Arrange-sizeFit' cannot be fluid, otherwise they lose their ability to
 * provide size to a cell.
 */

.Arrange-sizeFit img {
  max-width: none !important;
  width: auto !important;
}

/**
 * Start a new row context.
 */

.Arrange-row {
  display: table-row;
}

/* Vertical alignment modifiers
   ========================================================================== */

.Arrange--middle > .Arrange-sizeFill,
.Arrange--middle > .Arrange-sizeFit {
  vertical-align: middle;
}

.Arrange--bottom > .Arrange-sizeFill,
.Arrange--bottom > .Arrange-sizeFit {
  vertical-align: bottom;
}

/* Equal-width modifier
   ========================================================================== */

/**
 * This layout algorithm will create equal-width table cells, irrespective of
 * the width of their content.
 *
 * 1. The layout algorithm requires a set width to correctly calculate table
 *    cell width.
 */

.Arrange--equal {
  table-layout: fixed;
  width: 100%; /* 1 */
}

/**
 * Give the cells an equal width. This value ensures that Arrange is still 100%
 * wide when gutters are used in conjunctions with equal-width cells.
 *
 * It's recommended that only 'Arrange-sizeFill' be used for equal width cells.
 * Their inner images will automatically be responsive.
 */

.Arrange--equal > .Arrange-sizeFill,
.Arrange--equal > .Arrange-sizeFit,
.Arrange--equal > .Arrange-row > .Arrange-sizeFill,
.Arrange--equal > .Arrange-row > .Arrange-sizeFit {
  width: 1%;
}

/* Gutter modifier
   ========================================================================== */

/**
 * Add a gutter between cells
 *
 * NOTE: this can trigger a horizontal scrollbar if the component is as wide as
 * the viewport. Use padding on a container, or `overflow-x:hidden` to protect
 * against it.
 */

.Arrange--withGutter {
  margin: 0 -5px;
}

.Arrange--withGutter > .Arrange-sizeFit,
.Arrange--withGutter > .Arrange-sizeFill,
.Arrange--withGutter > .Arrange-row > .Arrange-sizeFit,
.Arrange--withGutter > .Arrange-row > .Arrange-sizeFill {
  padding: 0 5px;
}

/** @define Button */

/**
 * The button classes are best applied to links and buttons.
 * These components can be used in forms, as calls to action, or as part of the
 * general UI of the site/app.
 */

/**
 * 1. Normalize `box-sizing` across all elements that this component could be
 *    applied to.
 * 2. Inherit text color from ancestor.
 * 3. Inherit font styles from ancestor.
 * 4. Prevent button text from being selectable.
 */

.Button {
  background: transparent;
  border-color: currentcolor;
  border-style: solid;
  border-width: 1px;
  box-sizing: border-box; /* 1 */
  color: inherit; /* 2 */
  cursor: pointer;
  display: inline-block;
  font: inherit; /* 3 */
  margin: 0;
  padding: 0.4em 0.75em;
  position: relative;
  text-align: center;
  text-decoration: none;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none; /* 4 */
}

/**
 * Remove excess padding and border in Firefox 4+
 */

.Button::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Work around a Firefox/IE bug where the transparent `button` background
 * results in a loss of the default `button` focus styles.
 */

.Button:focus {
  outline: 1px dotted;
  outline: 5px auto -webkit-focus-ring-color;
}

/**
 * UI states
 */

.Button:hover,
.Button:focus,
.Button:active {
  text-decoration: none;
}

.Button:disabled,
.Button.is-disabled {
  cursor: default;
  opacity: 0.6;
}

/** @define FlexEmbed */

/**
 * Flexible media embeds
 *
 * For use with media embeds – such as videos, slideshows, or even images –
 * that need to retain a specific aspect ratio but adapt to the width of their
 * containing element.
 *
 * Based on: http://alistapart.com/article/creating-intrinsic-ratios-for-video
 */

.FlexEmbed {
  display: block;
  overflow: hidden;
  position: relative;
}

/**
 * The aspect-ratio hack is applied to an empty element because it allows
 * the component to respect `max-height`. Default aspect ratio is 1:1.
 */

.FlexEmbed-ratio {
  display: block;
  padding-bottom: 100%;
  width: 100%;
}

/**
 * Modifier: 3:1 aspect ratio
 */

.FlexEmbed-ratio--3by1 {
  padding-bottom: 33.33333%;
}

/**
 * Modifier: 2:1 aspect ratio
 */

.FlexEmbed-ratio--2by1 {
  padding-bottom: 50%;
}

/**
 * Modifier: 16:9 aspect ratio
 */

.FlexEmbed-ratio--16by9 {
  padding-bottom: 56.25%;
}

/**
 * Modifier: 4:3 aspect ratio
 */

.FlexEmbed-ratio--4by3 {
  padding-bottom: 75%;
}

/**
 * Fit the content to the aspect ratio
 */

.FlexEmbed-content {
  bottom: 0;
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;
}

/** @define Grid */

/**
 * Core grid component
 *
 * DO NOT apply dimension or offset utilities to the `Grid` element. All cell
 * widths and offsets should be applied to child grid cells.
 */

/* Grid container
   ========================================================================== */

/**
 * All content must be contained within child `Grid-cell` elements.
 *
 * 1. Account for browser defaults of elements that might be the root node of
 *    the component.
 */

.Grid {
  box-sizing: border-box;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex; /* 1 */
  -ms-flex-flow: row wrap;
      flex-flow: row wrap;
  margin: 0; /* 1 */
  padding: 0; /* 1 */
}

/**
 * Modifier: center align all grid cells
 */

.Grid--alignCenter {
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

/**
 * Modifier: right align all grid cells
 */

.Grid--alignRight {
  -webkit-box-pack: end;
      -ms-flex-pack: end;
          justify-content: flex-end;
}

/**
 * Modifier: middle-align grid cells
 */

.Grid--alignMiddle {
  -webkit-box-align: center;
      -ms-flex-align: center;
              -ms-grid-row-align: center;
          align-items: center;
}

/**
 * Modifier: bottom-align grid cells
 */

.Grid--alignBottom {
  -webkit-box-align: end;
      -ms-flex-align: end;
              -ms-grid-row-align: flex-end;
          align-items: flex-end;
}

/**
 * Modifier: allow cells to equal distribute width
 *
 * 1. Provide all values to avoid IE10 bug with shorthand flex
 *    http://git.io/vllC7
 *
 *    Use `0%` to avoid bug in IE10/11 with unitless flex basis
 *    http://git.io/vllWx
 */

.Grid--fit > .Grid-cell {
  -webkit-box-flex: 1;
      -ms-flex: 1 1 0%;
          flex: 1 1 0%; /* 1 */
}

/**
 * Modifier: all cells match height of tallest cell in a row
 */

.Grid--equalHeight > .Grid-cell {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

/**
 * Modifier: gutters
 */

.Grid--withGutter {
  margin: 0 -10px;
}

.Grid--withGutter > .Grid-cell {
  padding: 0 10px;
}

/* Grid cell
   ========================================================================== */

/**
 * No explicit width by default. Rely on combining `Grid-cell` with a dimension
 * utility or a component class that extends 'Grid'.
 *
 * 1. Set flex items to full width by default
 * 2. Fix issue where elements with overflow extend past the
 *    `Grid-cell` container - https://git.io/vw5oF
 */

.Grid-cell {
  box-sizing: inherit;
  -ms-flex-preferred-size: 100%;
      flex-basis: 100%; /* 1 */
  min-width: 0; /* 2 */
}

/**
 * Modifier: horizontally center one unit
 * Set a specific unit to be horizontally centered. Doesn't affect
 * any other units. Can still contain a child `Grid` object.
 */

.Grid-cell--center {
  margin: 0 auto;
}

/**
* Base styles and any SUIT vars
*/

html {
  font-size: 16px;
}

body {
  font-family: "Raleway Regular", sans-serif;
  line-height: 1.4;
  color: #091d5c;
  background-color: #fff;
}

a {
  color: #091d5c;
  text-decoration: underline;
}

a:hover,
a:focus,
a:active {
  color: #091d5c;
  text-decoration: none;
}

hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 3px solid #ee5455;
  margin: 1em 0;
  padding: 0;
}

iframe {
  max-width: 100%;
}

textarea {
  resize: vertical;
}

#wpadminbar {
  background-color: #777;
}

@font-face {
  font-family: "Raleway Regular";
  src: url("assets/fonts/raleway-regular-webfont.eot");
  src: url("assets/fonts/raleway-regular-webfont.eot?#iefix") format("embedded-opentype"), url("assets/fonts/raleway-regular-webfont.woff2") format("woff2"), url("assets/fonts/raleway-regular-webfont.woff") format("woff"), url("assets/fonts/raleway-regular-webfont.ttf") format("truetype"), url("assets/fonts/raleway-regular-webfont.svg#ralewayregular") format("svg");
  font-weight: normal;
  font-style: normal;
}

.alignleft,
.alignright {
  display: block;
  margin-bottom: 20px;
}

.aligncenter {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

.alignnone {
  margin: 5px 20px 20px 0;
}

@media (min-width: 768px) {
  .alignleft {
    float: left;
    margin: 0 20px 20px 0;
  }
  .alignright {
    float: right;
    margin: 0 0 20px 20px;
  }
}

.wp-caption {
  text-align: center;
  max-width: 96%;
  background-color: #eee;
  padding: 5px 3px 10px;
}

.wp-caption img {
  width: auto;
  height: auto;
  border: 0 none;
  margin: 0;
  max-width: 98.5%;
  padding: 0;
}

.wp-caption p.wp-caption-text {
  font-size: 11px;
  line-height: 17px;
  margin: 0;
  padding: 0 4px 5px;
}

.gallery-caption {
  border: 1px solid #f0f0f0;
  padding: 5px 3px 10px;
}

/** @define Entry; weak */

.Entry-header {
  border-bottom: 3px solid #bbb;
  padding: 15px 20px;
}

.Entry-title a {
  text-decoration: none;
}

.Entry-title a:hover {
  text-decoration: underline;
}

.Entry-meta {
  font-size: 14px;
}

.Entry-summary {
  padding: 20px 20px 30px;
}

.Entry-content {
  padding: 30px 20px 40px;
}

.Entry-content h2,
.Entry-content h3 {
  padding-bottom: 10px;
}

.Entry-content p {
  padding-bottom: 20px;
}

.Entry-content img {
  height: auto;
  max-width: 100%;
}

.Entry-content ul {
  list-style: disc;
  margin-bottom: 20px;
  padding-left: 20px;
}

.Entry-content ol {
  list-style: decimal;
  margin-bottom: 20px;
  padding-left: 20px;
}

.Entry-content li {
  margin-bottom: 10px;
}

.Entry-content .lead {
  font-size: 22px;
}

.Entry-footer {
  font-size: 15px;
  background-color: #eee;
  margin-bottom: 20px;
  padding: 15px 20px;
}

@media (min-width: 768px) {
  .Entry-content {
    padding: 50px 40px 60px;
  }
  .Entry-mainColumn {
    float: left;
    width: 60%;
  }
  .Entry-sidebar {
    float: right;
    width: 35%;
  }
}

/** @define Button */

.Button {
  font-size: 16px;
  border-width: 2px;
  border-radius: 5px;
}

.Button--sm {
  font-size: 14px;
  border-width: 1px;
  padding: 4px 9px;
}

.Button--lg {
  font-size: 18px;
  padding: 10px 20px;
}

.Button--default {
  color: #444;
  border-color: #bbb;
  background-color: #fff;
}

.Button--default:hover {
  color: #444;
  background-color: #c9c9c9;
}

.Button--primary {
  color: #fff;
  border-color: #ee5455;
  background-color: #ee5455;
}

.Button--primary:hover {
  color: #091d5c;
  background-color: #fff;
}

.Button--success {
  color: #fff;
  border-color: #1aa331;
  background-color: #1aa331;
}

.Button--success:hover {
  color: #091d5c;
  background-color: #fff;
}

/**
 * @define utilities
 * Text replacement
 */

.u-textHide {
  font: 0/0 a;
  color: transparent;
  text-shadow: none;
  background-color: transparent;
  border: 0;
}

body.mce-content-body {
  color: #091d5c;
  font: 16px "Raleway Regular", sans-serif;
  padding: 30px 20px 40px !important;
}

h2,
h3 {
  padding-bottom: 10px;
}

p {
  padding-bottom: 20px;
}

img {
  height: auto;
  max-width: 100%;
}

ul {
  list-style: disc;
  margin-bottom: 20px;
  padding-left: 20px;
}

ol {
  list-style: decimal;
  margin-bottom: 20px;
  padding-left: 20px;
}

li {
  margin-bottom: 10px;
}

.lead {
  font-size: 22px;
}

img {
  height: auto;
  max-width: 100%;
}
